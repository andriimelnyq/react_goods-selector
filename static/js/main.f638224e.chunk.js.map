{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","selectGood","good","setState","this","className","type","onClick","map","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,WAAa,SAACC,GAAD,OACVA,IAAS,EAAKH,MAAMC,aACjB,EAAKG,SAAS,CAAEH,aAAc,KAC9B,EAAKG,SAAS,CAAEH,aAAcE,KARtC,4CAWE,WAAU,IAAD,OACCF,EAAiBI,KAAKL,MAAtBC,aAER,OACE,uBAAMK,UAAU,oBAAhB,UAEGL,GACC,qBAAIK,UAAU,sCAAd,oBACML,EADN,gBAIE,wBACE,UAAQ,cACRM,KAAK,SACLD,UAAU,cACVE,QAAS,WACP,EAAKJ,SAAS,CAAEH,aAAc,YAKpCA,GAAgB,oBAAIK,UAAU,QAAd,+BAElB,uBAAOA,UAAU,QAAjB,SACE,gCACGR,EAAMW,KAAI,SAAAN,GACT,OACE,qBACE,UAAQ,OACRG,UAAWI,IACT,CAAE,+BAAgCP,IAASF,IAH/C,UAME,6BACE,wBACE,UACGE,IAASF,EAAgB,eAAiB,YAE7CM,KAAK,SACLD,UAAWI,IACT,SACA,CAAE,UAAWP,IAASF,IAExBO,QAAS,kBAAM,EAAKN,WAAWC,IATjC,SAWGA,IAASF,EAAe,IAAM,QAInC,oBAAI,UAAQ,YAAYK,UAAU,eAAlC,SACGH,qBA7DrB,GAAyBQ,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f638224e.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  selectGood = (good: string) => (\n    (good === this.state.selectedGood)\n      ? this.setState({ selectedGood: '' })\n      : this.setState({ selectedGood: good })\n  );\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n\n        {selectedGood && (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {`${selectedGood} is selected`}\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={() => {\n                this.setState({ selectedGood: '' });\n              }}\n            />\n          </h1>\n        )}\n        {!selectedGood && <h1 className=\"title\">No goods selected</h1>}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  className={classNames(\n                    { 'has-background-success-light': good === selectedGood },\n                  )}\n                >\n                  <td>\n                    <button\n                      data-cy={\n                        (good === selectedGood) ? 'RemoveButton' : 'AddButton'\n                      }\n                      type=\"button\"\n                      className={classNames(\n                        'button',\n                        { 'is-info': good === selectedGood },\n                      )}\n                      onClick={() => this.selectGood(good)}\n                    >\n                      {good === selectedGood ? '-' : '+'}\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}